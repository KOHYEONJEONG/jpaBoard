1. JWT는 로그인 방식이 아닌 인증 방식이다 — 맞는 말이야
로그인 방식이라는 표현은 정확히 말하면 잘못된 표현이야.
로그인은 보통 사용자 정보를 받아서 인증(아이디/비밀번호 확인)을 하고, 그 결과로 인증 수단(JWT, 세션 등)을 발급하는 과정이야.
JWT는 로그인 결과로 발급된 인증 수단 중 하나고, 이후 요청에서 인증을 처리하는 인증 방식(authentication method) 이라고 보면 돼.

구분	                        설명
로그인	            사용자 인증 정보(ID/PW)를 검증하는 초기 과정
인증 방식	        사용자의 신원을 이후 요청마다 검증하는 방식 (ex. 세션, JWT 등)
JWT	                인증 토큰을 담은 방식. 사용자가 인증되었는지를 토큰 파싱으로 확인



왜 필터(Filter)에서 JWT 인증을 하는가?
스프링 시큐리티에서의 인증 흐름과 관련이 있어.

🔹 필터가 먼저 요청을 가로채기 때문
스프링 시큐리티는 서블릿 필터 기반으로 동작해.
HTTP 요청이 컨트롤러까지 가기 전에 필터 체인을 거쳐.
JWT 토큰은 헤더(Authorization) 에 포함되기 때문에, 필터 단계에서 꺼내서 검증해야 다른 보안 로직이 정상 작동해.
-> 🚩스프링 시큐리티는 인증을 필터에서 하고, 인증된 사용자는 SecurityContextHolder에 보관함.
-> 그런데 인터셉터에서 인증하면 SecurityContext는 비어 있음.
-> 이후 코드에서 @AuthenticationPrincipal, SecurityContextHolder.getContext().getAuthentication() 이런 걸 써도 null 이 됨

🔹 JWT는 Stateless 하기 때문에 매 요청마다 검증 필요
JWT는 서버에 세션이 없어. 서버는 클라이언트가 보낸 토큰만으로 인증 여부를 판단해.

필터에서 처리하지 않으면, 이후 로직(인터셉터, 컨트롤러)에서는 인증이 된 사용자인지 판단할 수가 없어.
🔹 인증 객체를 세팅하는 핵심은 필터 단계

Authentication authentication = jwtTokenProvider.getAuthentication(token);
SecurityContextHolder.getContext().setAuthentication(authentication);//핵심


-------------------------

🔁 인터셉터랑의 차이점도 같이 보자
구분	                    필터(Filter)	                            인터셉터(HandlerInterceptor)
동작 시점	        DispatcherServlet 이전	                     DispatcherServlet 이후
사용 목적	        인증/보안, 로깅 등 전역 처리	                 컨트롤러 진입 전/후, 응답 후 처리 등
JWT 처리 적합성	            O (적합)	                             X (SecurityContext 세팅 어려움)

-------------------------

회원 가입 시 권한을 부여한다.